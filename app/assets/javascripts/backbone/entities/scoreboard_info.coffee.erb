@App.module "Entities", (Entities, App, Backbone, Marionette, $, _) ->

  class Entities.ScoreboardInfo extends Backbone.Model
    initialize: ->
      @set('dataTypeLabel', @dataTypeLabel)
      @set('refconLabel', @refconLabel)
      @set('regionLabel', @regionLabel)
      App.vent.on 'setSbData', (attribute, value) =>
        @set attribute, value
        @reloadResults()
        

      App.vent.on 'region:selected', (region) =>
        @reloadResults({
          advanced: null,
          region: region
        })
        
      App.vent.on 'refcon:selected', (refcon) =>
        @reloadResults({
          advanced: null,
          refcon: refcon
        })
      
      App.vent.on 'advanced:selected', (advanced) =>
        @reloadResults({
          advanced: advanced
        })

      App.vent.on 'result:selected', (result) =>
        @set 'result', result
      
      
      @get('results').on 'sync', =>
        result = @pickResult()
        @set 'result', result
      
      @on 'change:result', =>
        @changeResult()

      @get('precinctResults').on 'reset', =>
        @computeStats()
      
    computeStats: ->
      precinctResults = @get('precinctResults')
      precincts = precinctResults.get('precincts')
      @set 'precinctsReportingCount', precincts.length
      @set 'totalRegisteredVoters', precinctResults.get('voters')
      @set 'totalBallotsCast', precinctResults.get('ballots')
      @set 'totalValidVotes', precinctResults.get('votes')
      if precinctResults.get('channels')
        @set 'electionDayVotes', precinctResults.get('channels')['election-day']
        @set 'earlyVotes', precinctResults.get('channels')['early']
        @set 'absenteeVotes', precinctResults.get('channels')['absentee']
        @set 'npVotes', @get('totalRegisteredVoters') - @get('totalBallotsCast')
      
    changeResult: ->
      result  = @get 'result'
      region  = @get 'region'
      advanced = @get 'advanced'
      @set 'precinctsReportingCount', 0
      @set 'totalRegisteredVoters', 0
      @set 'totalBallotsCast', 0
      @set 'totalValidVotes', 0
      @set 'electionDayVotes', 0
      @set 'earlyVotes', 0
      @set 'absenteeVotes', 0
      @set 'npVotes', 0
    
      # This should *always* be pre-fetched and not change.
      #App.execute 'when:fetched', App.request('entities:precincts'), =>
      #colors  = @get 'precinctColors'
      #colors.fetchForResult result, region, advanced

      results = @get 'precinctResults'
      results.fetchForResult result, region, @extraOpts(), advanced
        
        
        
    reloadResults: (options = {}) ->
      return if @noResultsReload
      # Set any options
      for k,v of options
        @set k, v
        
      @preselectedRefconId = options.result?.id
      results = @get 'results'
      results.fetchForFilter @get('region'), @get('refcon'), this.extraOpts(), @get('advanced')
      App.vent.trigger('view_changed')

    pickResult: ->
      results = @get 'results'
      if @preselectedRefconId?
        result = results.get @preselectedRefconId
        @preselectedRefconId = null
      result || results.first()

    disableResultsReload: -> @noResultsReload = true
    enableResultsReload: -> @noResultsReload = false
    
    extraOpts: -> {
      channel_early: @get('channelEarly'),
      channel_electionday: @get('channelElectionday'),
      channel_absentee: @get('channelAbsentee')
      }


    dataTypeLabel:    ->
      if @coloringType == 'participation'
        return "Participation"
      else if @coloringType == 'partyRegistration'
        return "Party Registration"
      else
        return "Results"

    refconLabel:      ->
      if @coloringType == 'partyRegistration'
        return ''
      if App.request('entities:scoreboardUrl').advancedView()
        af = App.request 'entities:advancedFilter'
        af.breadcrumbsContestName() +  ' / '          
      else
        type = 'all'
        if @refcon
          type = @refcon.get('type')
          if type == 'all'
            id = @refcon.get('id')
            gon.categories[id] + ' / '
        if @refcon
          @refcon.get('name') + ' / '
        else
          ''
        
    regionLabel:       -> 
      if @region 
        @region.get('name')
      else if @advanced
        af = App.request 'entities:advancedFilter'
        af.breadcrumbsRegionName()
      else 
        "<%= I18n.t 'scoreboard.header.right_menu.tabs.all' %>" 
      
    

  API =
    getScoreboardInfo: ->
      unless Entities.scoreboardInfo?
        refcon = null
        # Scoreboard info is a *state* object
        Entities.scoreboardInfo = sb = window.sb = new Entities.ScoreboardInfo
          results:            new Entities.ResultsCollection
          result:             null
          #precinctColors:     new Entities.PrecinctColors
          precinctResults:    new Entities.PrecinctResultData
          channelEarly:       true
          channelElectionday: true
          channelAbsentee:    true

          precinctsReportingCount:  0
          totalBallotsCast:         0
          totalValidVotes:          0
          totalRegisteredVoters:    0
          electionDayVotes:         0
          earlyVotes:               0
          absenteeVotes:            0
          npVotes:                  0
          
          refcon:           refcon
          region:            null
          view:              null
          coloringType:      'results'
          map_type:          null
          showParticipation: false
          showVotingMethod:  false
          advanced:          null
          percentageType:    'ballots' # Can be 'ballots' or 'voters'
          
      Entities.scoreboardInfo

  App.reqres.setHandler 'entities:scoreboardInfo', -> API.getScoreboardInfo()
