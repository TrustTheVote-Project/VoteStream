@App = do (Backbone, Marionette) ->

  App = new Marionette.Application

  App.addRegions
    headerRegion: "#header-region"
    mainRegion: "#main-region"

  App.addInitializer ->
    
    csrfToken = $("meta[name='csrf-token']").attr("content")
    $.ajaxSetup
      headers: 
        'X-CSRF-Token': csrfToken
   
    
    unless App.Entities.refcons?
      App.Entities.refcons = new App.Entities.RefconCollection
      App.Entities.refcons.fetchForLocality gon.locality_id
   
    App.execute 'when:fetched', App.Entities.refcons, =>
      App.module("HeaderApp").start()
      App.module("ScoreboardsApp").start()
      App.module("AdvancedFiltersApp").start()
      App.module("MetadataApp").start()
      
      App.trigger('dataready')
      @startHistory()
      @navigate(@rootRoute, trigger: true) unless @getCurrentRoute()
      

  App.rootRoute = "map"

  # App.on "initialize:after", ->
  #   @startHistory()
  #   @navigate(@rootRoute, trigger: true) unless @getCurrentRoute()

  App
