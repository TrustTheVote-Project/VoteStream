@App = do (Backbone, Marionette) ->

  App = new Marionette.Application
    rootRoute: "map"
    
  App.addRegions
    headerRegion: "#header-region"
    mainRegion: "#main-region"

  App.addInitializer ->
    @localityId   = gon.locality_id
    @localityName = gon.locality_name
    @localityInfo = gon.locality_info
    @electionInfo = gon.election_info
    @percentReporting = gon.percentReporting
    
    csrfToken = $("meta[name='csrf-token']").attr("content")
    $.ajaxSetup
      headers: 
        'X-CSRF-Token': csrfToken
   
    
    App.request('entities:precincts')
    App.request('entities:refcons')
    App.request('entities:districts')
    # unless App.Entities.refcons?
    #   App.Entities.refcons = new App.Entities.RefconCollection
    #   App.Entities.refcons.fetchForLocality gon.locality_id
   
    App.execute 'when:fetched', [App.Entities.refcons, App.Entities.precincts, App.Entities.districts], =>
      App.module("HeaderApp").start()
      App.module("ScoreboardsApp").start()
      App.module("AdvancedFiltersApp").start()
      App.module("MetadataApp").start()
      
      App.trigger('dataready')
      @startHistory()
      @navigate(@rootRoute, trigger: true) unless @getCurrentRoute()
      

  # App.on "initialize:after", ->
  #   @startHistory()
  #   @navigate(@rootRoute, trigger: true) unless @getCurrentRoute()

  App
